namespace BUAA.CodeAnalysis.MiniSysY
{
    public enum SyntaxKind
    {
        None,
        IdentifierToken,
        NumericLiteralToken,
        IntKeyword,
        ReturnKeyword,
        VoidKeyword,
        OpenBraceToken,
        CloseBraceToken,
        OpenParenToken,
        CloseParenToken,
        SemicolonToken,
        SingleLineCommentTrivia,
        MultiLineCommentTrivia,
        CompilationUnit,
        Block,
        ArrayType,
        PredefinedType,
        Parameter,
        ParameterList,
        ReturnStatement,
        MethodDeclaration,
        PlusToken,
        MinusToken,
        AsteriskToken,
        SlashToken,
        PercentToken,
        UnaryPlusExpression,
        UnaryMinusExpression,
        AddExpression,
        SubtractExpression,
        MultiplyExpression,
        DivideExpression,
        ModuloExpression,
        ParenthesizedExpression,
        NumericLiteralExpression,
        ConstKeyword,
        SimpleAssignmentExpression,
        LocalDeclarationStatement,
        VariableDeclaration,
        VariableDeclarator,
        InvocationExpression,
        IdentifierName,
        ArgumentList,
        Argument,
        EqualsValueClause,
        EqualsToken,
        CommaToken,
        ExpressionStatement,
        EmptyStatement,
        IfKeyword,
        ElseKeyword,
        LogicalOrExpression,
        LogicalAndExpression,
        EqualsExpression,
        NotEqualsExpression,
        LessThanExpression,
        LessThanOrEqualExpression,
        GreaterThanExpression,
        GreaterThanOrEqualExpression,
        ExclamationToken,
        ExclamationEqualsToken,
        LessThanToken,
        LessThanEqualsToken,
        GreaterThanToken,
        GreaterThanEqualsToken,
        EqualsEqualsToken,
        AmpersandAmpersandToken,
        BarBarToken,
        IfStatement,
        ElseClause,
        LogicalNotExpression,
        FieldDeclaration,
        WhileKeyword,
        WhileStatement,
        BreakKeyword,
        BreakStatement,
        ContinueKeyword,
        ContinueStatement
    }
}
